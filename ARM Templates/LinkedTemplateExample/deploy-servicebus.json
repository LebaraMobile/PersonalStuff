/*
# Access granted under MIT Open Source License: https://en.wikipedia.org/wiki/MIT_License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation 
# the rights to use, copy, modify, merge, publish, distribute, sublicense, # and/or sell copies of the Software, 
# and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions 
# of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED 
# TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
# DEALINGS IN THE SOFTWARE.
#
# Created by: Brent Stineman
#
# Description: This template will create a service bus namespace, a queue within it, and two access policies (send and manage) on the
# queue. The template then outputs two objects (ManagePolicy and SendPolicy) which provide details needed to leverage the queues via 
# those policies.  
#
# For more about these techniques, see: https://brentdacodemonkey.wordpress.com/2017/03/09/azure-resource-manager-template-tips-and-tricks/
#
# Modifications
# 2017/04/19 : Initial publication
#
*/
{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": { 
        "ServiceBusNamespace": {
            "type": "string",
            "minLength": 3,
            "maxLength": 15,
            "metadata": {
                "description": "The unique storage account for use by Nether. only allows alpha characters and '-'. Cannot start or end with '-'."
            }
        },
        "ServiceBusTier": {
            "type": "string", 
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "Standard"
            ]
        },
        "queueName": {
            "type": "string",
            "metadata": {
                "description": "name of the queue to create"
            }
        },
        "ManagePolicyName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 15,
            "defaultValue": "Manage",
            "metadata": {
                "description": ""
            }
        },
        "SenderPolicyName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 15,
            "defaultValue": "Send",
            "metadata": {
                "description": ""
            }
        }
    },
    "variables": {
        "ehApiVersion": "2015-08-01",
        "location":"[resourceGroup().location]",
        "namespaceRef" : "[concat('Microsoft.ServiceBus/namespaces/', parameters('ServiceBusNamespace'))]",
        "queueRef" : "[concat('Microsoft.ServiceBus/namespaces/', parameters('ServiceBusNamespace'),'/queues/',parameters('queueName'))]"
    },
    "resources": [
        /* The Azure Service Bus Namespace, Event Hub, and access policy */
        {  
            "type":"Microsoft.ServiceBus/Namespaces",
            "name":"[parameters('ServiceBusNamespace')]",
            "location":"[variables('location')]",
            "apiVersion":"[variables('ehApiVersion')]",
            "sku":{  
                "name":"[parameters('ServiceBusTier')]",
                "tier":"[parameters('ServiceBusTier')]"
            },
            "resources":[                  
                /* create the queue */
                {
                    "type": "Queues",
                    "name": "[parameters('queueName')]",
                    "apiVersion": "[variables('ehApiVersion')]",
                    "dependsOn": [
                        "[variables('namespaceRef')]"
                    ],
                    "properties": {
                        "path": "[parameters('queueName')]",
                        "DefaultMessageTimeToLive" : "14:00:00"
                    },
                    "resources": [
                        /* create the consumer/manage policy */
                        {
                            "type": "authorizationRules",
                            "name": "[parameters('ManagePolicyName')]",
                            "apiVersion": "[variables('ehApiVersion')]",
                            "dependsOn": [
                                "[variables('queueRef')]"
                            ],
                            "properties": {
                                "rights": [ "Send", "Listen", "Manage" ]
                            }
                        },
                        /* create a "sender" policy */
                        {
                            "type": "authorizationRules",
                            "name": "[parameters('SenderPolicyName')]",
                            "apiVersion": "[variables('ehApiVersion')]",
                            "dependsOn": [
                                "[variables('queueRef')]"
                            ],
                            "properties": {
                                "rights": [ "Send" ]
                            }
                        }
                    ]
                }
            ]
        }
    ],
    /* outputs: 
    *   ManagePolicy: an object that describes details about using the listen/manage policy
    *   SendPolicy: an object that describes details about using the send policy
    */
    "outputs": {
        "ManagePolicy" : {
            "type" : "object",
            "value": {
                "namespace" : "[parameters('ServiceBusNamespace')]",
                "queueName" : "[parameters('queueName')]",
                "uri" : "[concat(reference(parameters('ServiceBusNamespace')).serviceBusEndpoint,parameters('queueName'),'/messages')]",
                "policyName": "[parameters('ManagePolicyName')]",
                "policyKey" : "[listKeys(parameters('ManagePolicyName'),variables('ehApiVersion')).primaryKey]",
                "connectionString" : "[listKeys(parameters('ManagePolicyName'),variables('ehApiVersion')).primaryConnectionString]"
            }
        },
        "SendPolicy" : {
            "type" : "object",
            "value": {
                "namespace" : "[parameters('ServiceBusNamespace')]",
                "queueName" : "[parameters('queueName')]",
                "uri" : "[concat(reference(parameters('ServiceBusNamespace')).serviceBusEndpoint,parameters('queueName'),'/messages')]",
                "policyName": "[parameters('SenderPolicyName')]",
                "policyKey" : "[listKeys(parameters('SenderPolicyName'),variables('ehApiVersion')).primaryKey]",
                "connectionString" : "[listKeys(parameters('SenderPolicyName'),variables('ehApiVersion')).primaryConnectionString]"
            }
        }
    }
}