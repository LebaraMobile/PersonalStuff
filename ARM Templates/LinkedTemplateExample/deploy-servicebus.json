/*
* This template will create an Azure Event Hub for use by Nether.
* 
* For more information, please refer to the Nether repository at: https://github.com/MicrosoftDX/nether/tree/master/deployment
*/
{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": { 
        "ServiceBusNamespace": {
            "type": "string",
            "minLength": 3,
            "maxLength": 15,
            "metadata": {
                "description": "The unique storage account for use by Nether. only allows alpha characters and '-'. Cannot start or end with '-'."
            }
        },
        "ServiceBusTier": {
            "type": "string", 
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "Standard"
            ]
        },
        "queueName": {
            "type": "string",
            "defaultValue": "analyticevents",
            "metadata": {
                "description": ""
            }
        },
        "ManagePolicyName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 15,
            "defaultValue": "Manage",
            "metadata": {
                "description": ""
            }
        },
        "SenderPolicyName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 15,
            "defaultValue": "Send",
            "metadata": {
                "description": ""
            }
        }
    },
    "variables": {
        "ehApiVersion": "2015-08-01",
        "location":"[resourceGroup().location]",
        "namespaceRef" : "[concat('Microsoft.EventHub/namespaces/', parameters('ServiceBusNamespace'))]",
        "eventHubRef" : "[concat('Microsoft.EventHub/namespaces/', parameters('ServiceBusNamespace'),'/eventhubs/',parameters('eventHubName'))]"
    },
    "resources": [
        /* The Azure Service Bus Namespace, Event Hub, and access policy */
        {  
            "type":"Microsoft.EventHub/Namespaces",
            "name":"[parameters('ServiceBusNamespace')]",
            "location":"[variables('location')]",
            "apiVersion":"[variables('ehApiVersion')]",
            "sku":{  
                "name":"[parameters('ServiceBusTier')]",
                "tier":"[parameters('ServiceBusTier')]",
                "capacity": "[parameters('Capacity')]"
            },
            "resources":[                  
                /* create the queue */
                {
                    "type": "Queues",
                    "name": "[parameters('serviceBusQueueName')]",
                    "apiVersion": "[variables('ehApiVersion')]",
                    "dependsOn": [
                        "[variables('namespaceRef')]"
                    ],
                    "properties": {
                    },
                    "resources": [
                        /* create the consumer/manage policy */
                        {
                            "type": "authorizationRules",
                            "name": "[parameters('ManagePolicyName')]",
                            "apiVersion": "[variables('ehApiVersion')]",
                            "dependsOn": [
                                "[variables('eventHubRef')]"
                            ],
                            "properties": {
                                "rights": [ "Send", "Listen", "Manage" ]
                            }
                        },
                        /* create a "sender" policy */
                        {
                            "type": "authorizationRules",
                            "name": "[parameters('SenderPolicyName')]",
                            "apiVersion": "[variables('ehApiVersion')]",
                            "dependsOn": [
                                "[variables('eventHubRef')]"
                            ],
                            "properties": {
                                "rights": [ "Send" ]
                            }
                        }
                    ]
                }
            ]
        }
    ],
    /* outputs: 
    *   ManagePolicy: an object that describes details about using the listen/manage policy
    *   SendPolicy: an object that describes details about using the send policy
    */
    "outputs": {
        "ManagePolicy" : {
            "type" : "object",
            "value": {
                "namespace" : "[parameters('ServiceBusNamespace')]",
                "hubname" : "[parameters('EventHubName')]",
                "uri" : "[concat(reference(parameters('ServiceBusNamespace')).serviceBusEndpoint,parameters('EventHubName'),'/messages')]",
                "policyName": "[parameters('ManagePolicyName')]",
                "policyKey" : "[listKeys(resourceId(concat('Microsoft.EventHub/namespaces/EventHubs/AuthorizationRules'),parameters('ServiceBusNamespace'),parameters('EventHubName'),parameters('ManagePolicyName')),variables('ehApiVersion')).primaryKey]",
                "connectionString" : "[listKeys(resourceId(concat('Microsoft.EventHub/namespaces/EventHubs/AuthorizationRules'),parameters('ServiceBusNamespace'),parameters('EventHubName'),parameters('ManagePolicyName')),variables('ehApiVersion')).primaryConnectionString]"
            }
        },
        "SendPolicy" : {
            "type" : "object",
            "value": {
                "namespace" : "[parameters('ServiceBusNamespace')]",
                "hubname" : "[parameters('EventHubName')]",
                "uri" : "[concat(reference(parameters('ServiceBusNamespace')).serviceBusEndpoint,parameters('EventHubName'),'/messages')]",
                "policyName": "[parameters('SenderPolicyName')]",
                "policyKey" : "[listKeys(resourceId(concat('Microsoft.EventHub/namespaces/EventHubs/AuthorizationRules'),parameters('ServiceBusNamespace'),parameters('EventHubName'),parameters('SenderPolicyName')),variables('ehApiVersion')).primaryKey]",
                "connectionString" : "[listKeys(resourceId(concat('Microsoft.EventHub/namespaces/EventHubs/AuthorizationRules'),parameters('ServiceBusNamespace'),parameters('EventHubName'),parameters('SenderPolicyName')),variables('ehApiVersion')).primaryConnectionString]"
            }
        }
    }
}