
{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": { 
        "resourcePrefix": {
            "type": "string",
            "minLength": 6,
            "maxLength": 6,
            "metadata": {
                "description": "The resource prefix (must be globally unique). only allows alpha characters." 
            }
        },
        "WebHostingPlan": { 
            "type": "string", 
            "defaultValue": "Free (no 'always on')", 
            "allowedValues": [ 
                "Free (no 'always on')", 
                "Shared", 
                "Basic B1", 
                "Basic B2", 
                "Basic B3", 
                "Standard S1", 
                "Standard S2", 
                "Standard S3", 
                "Premium P1", 
                "Premium P2", 
                "Premium P3"
            ], 
            "metadata": { 
                "description": "Specifies the database pricing/performance." 
            } 
        }, 
        "InstanceCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of copies of the application. Limited based on hosting plan. "
            }
        },
        "databaseSKU": { 
            "type": "string", 
            "defaultValue": "Basic", 
            "allowedValues": [ 
                "Basic", 
                "Standard", 
                "Standard S1", 
                "Standard S2", 
                "Standard S3", 
                "Premium P1", 
                "Premium P2", 
                "Premium P4", 
                "Premium P6", 
                "Premium P11", 
                "Premium P15"
            ], 
            "metadata": { 
                "description": "Specifies the database pricing/performance." 
            } 
        }, 
        "adminUser": {
            "type": "string",
            "metadata": {
                "description": "The admin user"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the admin user"
            }
        },
        "serviceBusTier": {
            "type": "string", 
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "Standard"
            ]
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_GRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Account type, premium vs standard, and local, zone, global, global read only redundancy"
            }
        },
        "templateBaseURL": {
            "type": "string",
            "defaultValue": "[deployment().properties.templateLink.uri]",
            "metadata": {
                "description": "The base location for all linked templates."
            }   
        },
        "templateSASToken": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The base location for all linked templates."
            }   
        }
    },
    "variables": {
        "deploymentAPI" : "2015-01-01",
        "sqlServerName" : "[concat(parameters('resourcePrefix'), '-sql')]",
        "ServiceBusNamespace" : "[concat(parameters('resourcePrefix'), '-sbQueues')]",
        "DomainPrefix": "[concat(parameters('resourcePrefix'), '-web')]",
        "StorageAccountName": "[parameters('resourcePrefix')]",
        "dbTemplateURI": "[concat(uri(parameters('templateBaseURL'), 'deploy-db.json'), parameters('templateSASToken'))]",
        "WebTemplateURI": "[concat(uri(parameters('templateBaseURL'), 'deploy-web.json'), parameters('templateSASToken'))]",
        "StorageTemplateURI": "[concat(uri(parameters('templateBaseURL'), 'deploy-storageAccount.json'), parameters('templateSASToken'))]",
        "ServiceBusTemplateURI": "[concat(uri(parameters('templateBaseURL'), 'deploy-servicebus.json'), parameters('templateSASToken'))]",
        "queuename" : "samplequeue"
    },
    "resources": [ 
        { 
            "type": "Microsoft.Resources/deployments", 
            "name": "SQLDatabaseTemplate", 
            "apiVersion": "[variables('deploymentAPI')]", 
            "properties": { 
                "mode": "Incremental", 
                "templateLink": {
                    "uri": "[variables('dbTemplateURI')]",
                    "contentVersion": "1.0.0.0"
                }, 
                "parameters": { 
                    "sqlServerName": { "value": "[variables('sqlServerName')]" },
                    "databaseName": { "value": "sample" },
                    "databaseSKU": { "value": "[parameters('databaseSKU')]" },
                    "sqlAdministratorLogin": { "value": "[parameters('adminUser')]" },
                    "sqlAdministratorPassword": { "value": "[parameters('adminPassword')]" }
                } 
            } 
        },
        { 
            "type": "Microsoft.Resources/deployments", 
            "name": "ServiceBusTemplate", 
            "apiVersion": "[variables('deploymentAPI')]", 
            "properties": { 
                "mode": "Incremental", 
                "templateLink": {
                    "uri": "[variables('ServiceBusTemplateURI')]",
                    "contentVersion": "1.0.0.0"
                }, 
                "parameters": { 
                    "ServiceBusNamespace": { "value": "[variables('ServiceBusNamespace')]" },
                    "ServiceBusTier": { "value": "[parameters('serviceBusTier')]" },
                    "queueName": { "value": "[variables('queuename')]" }
                } 
            } 
        },
        { 
            "type": "Microsoft.Resources/deployments", 
            "name": "WebTemplate", 
            "apiVersion": "[variables('deploymentAPI')]", 
            "dependsOn": [
                "SQLDatabaseTemplate",
                "ServiceBusTemplate"
            ],
            "properties": { 
                "mode": "Incremental", 
                "templateLink": {
                    "uri": "[variables('WebTemplateURI')]",
                    "contentVersion": "1.0.0.0"
                }, 
                "parameters": { 
                    "DomainPrefix": { "value": "[variables('DomainPrefix')]" },
                    "WebHostingPlan": { "value": "[parameters('WebHostingPlan')]" },
                    "InstanceCount": { "value": "[parameters('InstanceCount')]" },
                    "sqlServerFQDN": { "value": "[reference('SQLDatabaseTemplate').outputs.databaseServerFQDN.value]" },
                    "sqlDatabaseName": { "value": "[[reference('SQLDatabaseTemplate').outputs.databaseName.value]" },
                    "sqlAdministratorLogin": { "value": "[parameters('adminUser')]" },
                    "sqlAdministratorPassword": { "value": "[parameters('adminPassword')]" },
                    "svcbusSendPolicy": { "value": "[reference('ServiceBusTemplate').outputs.sendPolicy.value]" }
                } 
            } 
        },
        { 
            "type": "Microsoft.Resources/deployments", 
            "name": "Storage", 
            "apiVersion": "[variables('deploymentAPI')]", 
            "properties": { 
                "mode": "Incremental", 
                "templateLink": {
                    "uri": "[variables('StorageTemplateURI')]",
                    "contentVersion": "1.0.0.0"
                }, 
                "parameters": { 
                    "storageAccountName": { "value": "[variables('StorageAccountName')]" },
                    "storageAccountType": { "value": "[parameters('storageAccountType')]" }
                } 
            } 
        } 
    ],
    "outputs": {
        "WebSiteFQDN" : {
            "type" : "string",
            "value": "[reference('WebTemplate').Outputs.webSiteFQDN.value]"
        },
        "DatabaseServerFQDN" : {
            "type" : "string",
            "value": "[reference('SQLDatabaseTemplate').Outputs.databaseServerFQDN.value]"
        },
        "DatabaseName" : {
            "type" : "string",
            "value": "[reference('SQLDatabaseTemplate').Outputs.databaseName.value]"
        }
    }
}
